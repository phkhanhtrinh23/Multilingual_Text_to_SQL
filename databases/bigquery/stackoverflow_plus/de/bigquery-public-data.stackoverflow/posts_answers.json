{
  "table_name": "posts_answers",
  "table_fullname": "bigquery-public-data.stackoverflow.posts_answers",
  "column_names": [
    "ID",
    "Titel",
    "Inhalt",
    "ID der akzeptierten Antwort",
    "Anzahl der Antworten",
    "Anzahl der Kommentare",
    "Datum der Community-Eigentümerschaft",
    "Erstellungsdatum",
    "Anzahl der Favoriten",
    "Datum der letzten Aktivität",
    "Letztes Bearbeitungsdatum",
    "Name des letzten Bearbeiters",
    "ID des letzten Bearbeiters",
    "Name des Erstellers",
    "ID des Erstellers",
    "Eltern-ID",
    "Beitragstyp",
    "Punktzahl",
    "Schlagwörter",
    "Anzahl der Ansichten"
  ],
  "column_types": [
    "INT64",
    "STRING",
    "STRING",
    "STRING",
    "STRING",
    "INT64",
    "TIMESTAMP",
    "TIMESTAMP",
    "STRING",
    "TIMESTAMP",
    "TIMESTAMP",
    "STRING",
    "INT64",
    "STRING",
    "INT64",
    "INT64",
    "INT64",
    "INT64",
    "STRING",
    "STRING"
  ],
  "nested_column_names": [
    "Identifikator",
    "Titel",
    "Inhalt",
    "ID der akzeptierten Antwort",
    "Anzahl der Antworten",
    "Anzahl der Kommentare",
    "Datum der Community-Eigentümerschaft",
    "Erstellungsdatum",
    "Anzahl der Favoriten",
    "Datum der letzten Aktivität",
    "Datum der letzten Bearbeitung",
    "Anzeigename des letzten Bearbeiters",
    "ID des letzten Bearbeiters",
    "Anzeigename des Eigentümers",
    "Benutzer-ID des Eigentümers",
    "Eltern-ID",
    "Beitragstyp-ID",
    "Punktzahl",
    "Schlagwörter",
    "Anzahl der Aufrufe"
  ],
  "nested_column_types": [
    "INT64",
    "STRING",
    "STRING",
    "STRING",
    "STRING",
    "INT64",
    "TIMESTAMP",
    "TIMESTAMP",
    "STRING",
    "TIMESTAMP",
    "TIMESTAMP",
    "STRING",
    "INT64",
    "STRING",
    "INT64",
    "INT64",
    "INT64",
    "INT64",
    "STRING",
    "STRING"
  ],
  "description": [
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ],
  "sample_rows": [
    {
      "Identifikator": 21048655,
      "Titel": null,
      "Inhalt": "<p>If you will not use strongSelf in the code suggested by Kevin Ballard then it might lead to a crash because of weak getting nilled out.</p>\n\n<p>Also a good practice would be to even check for strong being non nil at the point of creating      </p>\n\n<pre><code>strongSelf = weakSelf\n\n   if(strongSelf)\n   {\n       // do your stuff here \n   }\n</code></pre>",
      "ID der akzeptierten Antwort": null,
      "Anzahl der Antworten": null,
      "Anzahl der Kommentare": 0,
      "Datum der Community-Eigentümerschaft": "NaT",
      "Erstellungsdatum": "2014-01-10 15:53:33.090000+00:00",
      "Anzahl der Favoriten": null,
      "Datum der letzten Aktivität": "2014-01-10 15:53:33.090000+00:00",
      "Datum der letzten Bearbeitung": "NaT",
      "Anzeigename des letzten Bearbeiters": null,
      "ID des letzten Bearbeiters": null,
      "Anzeigename des Eigentümers": null,
      "Benutzer-ID des Eigentümers": 1785418,
      "Eltern-ID": 14370325,
      "Beitragstyp-ID": 2,
      "Punktzahl": 0,
      "Schlagwörter": null,
      "Anzahl der Aufrufe": null
    },
    {
      "Identifikator": 21048662,
      "Titel": null,
      "Inhalt": "<p>Every Draw object creates a new timer so you have the game running n times at the same time but the copies of the game share the state because ir is stored in static variables so the state is updated n-1 times faster than it should.</p>\n\n<p>You may stop the timer <a href=\"https://stackoverflow.com/questions/1409116/how-to-stop-the-task-scheduled-in-java-util-timer-class\">this way</a> or you may use a static timer and <a href=\"http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Timer.html#schedule%28java.util.TimerTask,%20long,%20long%29\" rel=\"nofollow noreferrer\">schedule/cancel the task</a> each time.</p>",
      "ID der akzeptierten Antwort": null,
      "Anzahl der Antworten": null,
      "Anzahl der Kommentare": 0,
      "Datum der Community-Eigentümerschaft": "NaT",
      "Erstellungsdatum": "2014-01-10 15:53:51.817000+00:00",
      "Anzahl der Favoriten": null,
      "Datum der letzten Aktivität": "2014-01-10 15:53:51.817000+00:00",
      "Datum der letzten Bearbeitung": "2017-05-23 12:21:28.453000+00:00",
      "Anzeigename des letzten Bearbeiters": null,
      "ID des letzten Bearbeiters": -1,
      "Anzeigename des Eigentümers": null,
      "Benutzer-ID des Eigentümers": 270349,
      "Eltern-ID": 21048393,
      "Beitragstyp-ID": 2,
      "Punktzahl": 0,
      "Schlagwörter": null,
      "Anzahl der Aufrufe": null
    },
    {
      "Identifikator": 21048666,
      "Titel": null,
      "Inhalt": "<pre><code>a=[[\"A\" for i in range(4)] for j in range(4)]\n\nfor i in range(len(a)):\n  print()\n  for j in a[i]:\n     print(\"%c \"%j,end='')\n</code></pre>\n\n<p>it will print like this:</p>\n\n<pre><code>A A A A\nA A A A\nA A A A\nA A A A\n</code></pre>",
      "ID der akzeptierten Antwort": null,
      "Anzahl der Antworten": null,
      "Anzahl der Kommentare": 0,
      "Datum der Community-Eigentümerschaft": "NaT",
      "Erstellungsdatum": "2014-01-10 15:54:03.450000+00:00",
      "Anzahl der Favoriten": null,
      "Datum der letzten Aktivität": "2014-01-10 16:20:00.777000+00:00",
      "Datum der letzten Bearbeitung": "2014-01-10 16:20:00.777000+00:00",
      "Anzeigename des letzten Bearbeiters": null,
      "ID des letzten Bearbeiters": 1887779,
      "Anzeigename des Eigentümers": null,
      "Benutzer-ID des Eigentümers": 3182465,
      "Eltern-ID": 16541973,
      "Beitragstyp-ID": 2,
      "Punktzahl": 0,
      "Schlagwörter": null,
      "Anzahl der Aufrufe": null
    },
    {
      "Identifikator": 21048669,
      "Titel": null,
      "Inhalt": "<p>Using standard library:\n</p>\n\n<pre><code>&gt;&gt;&gt; from itertools import groupby \n&gt;&gt;&gt; groups = [list(g[1]) for g in groupby(a, lambda x: x &gt; 44)]\n&gt;&gt;&gt; print groups\n\n[[380.01874, 50.551693], [42.776562, 42.650467, 42.439999, 42.408905, \n42.260563, 42.108276, 42.168007, 42.118984, 42.124863, 42.043224, \n42.095177, 41.915165, 42.06472, 41.938156, 41.893482, 41.941589, \n41.8997, 41.925949, 41.819122, 41.86272, 41.75209, 41.802406, 41.760361], \n[45.260254, 46.825336, 46.500366, 44.3283], [41.763329, 41.780571, \n41.672211, 41.641739, 41.651295, 41.618404, 41.695488, 41.671284, \n41.621643, 41.441597, 41.66975, 41.577599, 41.615841, 41.495602, \n41.561581, 41.560726, 41.6759, 41.537495, 41.401688, 41.618671, \n41.560268, 41.503071, 41.528313], [45.30022, 48.274105], [41.432148, \n41.471291, 41.512859, 41.50565, 41.512371, 41.466312, 41.473175, \n41.515701, 41.500916, 41.439285, 41.492058, 41.4678, 41.40226, \n41.388351, 41.381634, 41.41087, 41.469292, 41.360497, 41.5056, 41.378258, \n41.513493, 41.330299, 41.396099, 41.402149, 41.358822], [44.038559, \n47.995853, 48.233227, 44.078781], [41.41098, 41.243141, 41.356258, \n41.455688, 41.244099, 41.360558, 41.313278, 41.463379, 41.245998, \n41.313683, 41.220814, 41.380154, 41.345943, 41.313438, 41.259727, \n41.361221, 41.238659, 41.397285]]\n</code></pre>\n\n<p>It is then straightforward to group this list into pairs if that's what you need:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>pairs = zip(*[iter(groups)] * 2)\n</code></pre>\n\n<p>The result would be a a list of 2-tuples, each one consisting of two lists (values greater than 44 and values less than 44).</p>",
      "ID der akzeptierten Antwort": null,
      "Anzahl der Antworten": null,
      "Anzahl der Kommentare": 0,
      "Datum der Community-Eigentümerschaft": "NaT",
      "Erstellungsdatum": "2014-01-10 15:54:06.590000+00:00",
      "Anzahl der Favoriten": null,
      "Datum der letzten Aktivität": "2014-01-10 15:54:06.590000+00:00",
      "Datum der letzten Bearbeitung": "NaT",
      "Anzeigename des letzten Bearbeiters": null,
      "ID des letzten Bearbeiters": null,
      "Anzeigename des Eigentümers": null,
      "Benutzer-ID des Eigentümers": 1115659,
      "Eltern-ID": 21045041,
      "Beitragstyp-ID": 2,
      "Punktzahl": 0,
      "Schlagwörter": null,
      "Anzahl der Aufrufe": null
    },
    {
      "Identifikator": 21048684,
      "Titel": null,
      "Inhalt": "<p><code>time</code> function and <code>time_t</code> type granularity is usually seconds, so if your function returns in less than 1 second the diff will be zero.\nFor quick and dirty benchmarking you can use <code>clock()</code>.</p>",
      "ID der akzeptierten Antwort": null,
      "Anzahl der Antworten": null,
      "Anzahl der Kommentare": 0,
      "Datum der Community-Eigentümerschaft": "NaT",
      "Erstellungsdatum": "2014-01-10 15:54:40.657000+00:00",
      "Anzahl der Favoriten": null,
      "Datum der letzten Aktivität": "2014-01-10 15:54:40.657000+00:00",
      "Datum der letzten Bearbeitung": "NaT",
      "Anzeigename des letzten Bearbeiters": null,
      "ID des letzten Bearbeiters": null,
      "Anzeigename des Eigentümers": null,
      "Benutzer-ID des Eigentümers": 2382136,
      "Eltern-ID": 21048465,
      "Beitragstyp-ID": 2,
      "Punktzahl": 0,
      "Schlagwörter": null,
      "Anzahl der Aufrufe": null
    }
  ]
}