{
  "table_name": "county_2010_1yr",
  "table_fullname": "bigquery-public-data.census_bureau_acs.county_2010_1yr",
  "column_names": [
    "Geografische Kennung",
    "Geoid SL",
    "Geoid SC",
    "Nichtfamilienhaushalte",
    "Familienhaushalte",
    "Medianbaujahr der Gebäude",
    "Mietbelastung nicht berechnet",
    "Mietbelastung über 50 Prozent",
    "Mietbelastung 40 bis 50 Prozent",
    "Mietbelastung 35 bis 40 Prozent",
    "Mietbelastung 30 bis 35 Prozent",
    "Mietbelastung 25 bis 30 Prozent",
    "Mietbelastung 20 bis 25 Prozent",
    "Mietbelastung 15 bis 20 Prozent",
    "Mietbelastung 10 bis 15 Prozent",
    "Mietbelastung unter 10 Prozent",
    "Gesamtbevölkerung",
    "Männliche Bevölkerung",
    "Weibliche Bevölkerung",
    "Medianalter",
    "Weiße Bevölkerung",
    "Schwarze Bevölkerung",
    "Asiatische Bevölkerung",
    "Hispanische Bevölkerung",
    "Amerindian-Bevölkerung",
    "Bevölkerung anderer Rassen",
    "Bevölkerung mit zwei oder mehr Rassen",
    "Nicht-hispanische Bevölkerung",
    "Pendler mit öffentlichen Verkehrsmitteln",
    "Haushalte",
    "Median-Einkommen",
    "Einkommen pro Kopf",
    "Wohneinheiten",
    "Leerstehende Wohneinheiten",
    "Leerstehende Wohneinheiten zur Miete",
    "Leerstehende Wohneinheiten zum Verkauf",
    "Medianmiete",
    "Anteil des Einkommens, der für Miete verwendet wird",
    "Vom Eigentümer bewohnte Wohneinheiten",
    "Wohnungen im Wert von einer Million Dollar",
    "Hypothekenbelastete Wohneinheiten",
    "Familien mit jungen Kindern",
    "Zwei-Eltern-Familien mit jungen Kindern",
    "Zwei-Eltern-Familien mit erwerbstätigen Eltern und jungen Kindern",
    "Zwei-Eltern-Familien mit erwerbstätigem Vater und jungen Kindern",
    "Zwei-Eltern-Familien mit erwerbstätiger Mutter und jungen Kindern",
    "Zwei-Eltern-Familien ohne Erwerbstätige mit jungen Kindern",
    "Alleinerziehende Familien mit jungen Kindern",
    "Väter als Alleinerziehende mit jungen Kindern",
    "Vater in erwerbstätigen-Ein-Eltern-Familien mit jungen Kindern",
    "Pendelzeit 10 bis 14 Minuten",
    "Pendelzeit 15 bis 19 Minuten",
    "Pendelzeit 20 bis 24 Minuten",
    "Pendelzeit 25 bis 29 Minuten",
    "Pendelzeit 30 bis 34 Minuten",
    "Pendelzeit 45 bis 59 Minuten",
    "Gesamtfahrzeit zur Arbeit",
    "Einkommen unter 10.000",
    "Einkommen 10.000 bis 14.999",
    "Einkommen 15.000 bis 19.999",
    "Einkommen 20.000 bis 24.999",
    "Einkommen 25.000 bis 29.999",
    "Einkommen 30.000 bis 34.999",
    "Einkommen 35.000 bis 39.999",
    "Einkommen 40.000 bis 44.999",
    "Einkommen 45.000 bis 49.999",
    "Einkommen 50.000 bis 59.999",
    "Einkommen 60.000 bis 74.999",
    "Einkommen 75.000 bis 99.999",
    "Einkommen 100.000 bis 124.999",
    "Einkommen 125.000 bis 149.999",
    "Einkommen 150.000 bis 199.999",
    "Einkommen 200.000 oder mehr",
    "Mieter-Wohneinheiten mit mittlerer Bruttomiete",
    "Eigentümerbewohnte Wohneinheiten unteres Quartil",
    "Medianwert Eigentumswohneinheiten",
    "Eigentümerbewohnte Wohneinheiten oberes Quartil",
    "Verheiratete Haushalte",
    "Bewohnte Wohneinheiten",
    "Mietwohnungen",
    "Freistehende Einfamilienhäuser",
    "Reihenhäuser",
    "Zweifamilienhäuser",
    "Drei- bis Vierfamilienhäuser",
    "Fünf bis Neun Wohneinheiten pro Gebäude",
    "Zehn bis Neunzehn Wohneinheiten pro Gebäude",
    "Zwanzig bis Neunundvierzig Wohneinheiten pro Gebäude",
    "Fünfzig oder mehr Wohneinheiten pro Gebäude",
    "Mobilheime",
    "Baujahr 2005 oder später",
    "Baujahr 2000 bis 2004",
    "Baujahr 1939 oder früher",
    "Männliche Bevölkerung unter 5 Jahren",
    "Männliche Bevölkerung von 5 bis 9 Jahren",
    "Männliche Bevölkerung von 10 bis 14 Jahren",
    "Männliche Bevölkerung von 15 bis 17 Jahren",
    "Männliche Bevölkerung von 18 bis 19 Jahren",
    "Männliche Bevölkerung ab 20 Jahren",
    "Männliche Bevölkerung ab 21 Jahren",
    "Männliche Bevölkerung von 22 bis 24 Jahren",
    "Männliche Bevölkerung von 25 bis 29 Jahren",
    "Männliche Bevölkerung von 30 bis 34 Jahren",
    "Männliche Bevölkerung von 35 bis 39 Jahren",
    "Männliche Bevölkerung von 40 bis 44 Jahren",
    "Männliche Bevölkerung von 45 bis 49 Jahren",
    "Männliche Bevölkerung von 50 bis 54 Jahren",
    "Männliche Bevölkerung von 55 bis 59 Jahren",
    "Männliche Bevölkerung von 60 bis 61 Jahren",
    "Männliche Bevölkerung von 62 bis 64 Jahren",
    "Männliche Bevölkerung von 65 bis 66 Jahren",
    "Männliche Bevölkerung von 67 bis 69 Jahren",
    "Männliche Bevölkerung von 70 bis 74 Jahren",
    "Männliche Bevölkerung von 75 bis 79 Jahren",
    "Männliche Bevölkerung von 80 bis 84 Jahren",
    "Männliche Bevölkerung ab 85 Jahren",
    "Weibliche Bevölkerung unter 5 Jahren",
    "Weibliche Bevölkerung von 5 bis 9 Jahren",
    "Weibliche Bevölkerung von 10 bis 14 Jahren",
    "Weibliche Bevölkerung von 15 bis 17 Jahren",
    "Weibliche Bevölkerung von 18 bis 19 Jahren",
    "Weibliche Bevölkerung ab 20 Jahren",
    "Weibliche Bevölkerung ab 21 Jahren",
    "Weibliche Bevölkerung von 22 bis 24 Jahren",
    "Weibliche Bevölkerung von 25 bis 29 Jahren",
    "Weibliche Bevölkerung von 30 bis 34 Jahren",
    "Weibliche Bevölkerung von 35 bis 39 Jahren",
    "Weibliche Bevölkerung von 40 bis 44 Jahren",
    "Weibliche Bevölkerung von 45 bis 49 Jahren",
    "Weibliche Bevölkerung von 50 bis 54 Jahren",
    "Weibliche Bevölkerung von 55 bis 59 Jahren",
    "Weibliche Bevölkerung von 60 bis 61 Jahren",
    "Weibliche Bevölkerung von 62 bis 64 Jahren",
    "Weibliche Bevölkerung von 65 bis 66 Jahren",
    "Weibliche Bevölkerung von 67 bis 69 Jahren",
    "Weibliche Bevölkerung von 70 bis 74 Jahren",
    "Weibliche Bevölkerung von 75 bis 79 Jahren",
    "Weibliche Bevölkerung von 80 bis 84 Jahren",
    "Weibliche Bevölkerung ab 85 Jahren",
    "Weiße inklusive Hispanischer Abstammung",
    "Schwarze inklusive Hispanischer Abstammung",
    "Amerindian-Bevölkerung einschließlich Hispanischer Abstammung",
    "Asiatische Bevölkerung einschließlich Hispanischer Abstammung",
    "Pendelzeit 5 bis 9 Minuten",
    "Pendelzeit 35 bis 39 Minuten",
    "Pendelzeit 40 bis 44 Minuten",
    "Pendelzeit 60 bis 89 Minuten",
    "Pendelzeit 90 Minuten oder mehr",
    "Haushalte mit Ruhestands-Einkommen",
    "Asiatischer Mann im Alter 45 bis 54 Jahre",
    "Asiatischer Mann 55–64 Jahre",
    "Schwarzer Mann 45–54 Jahre",
    "Schwarzer Mann 55–64 Jahre",
    "Hispanischer Mann 45–54 Jahre",
    "Hispanischer Mann 55–64 Jahre",
    "Weißer Mann 45–54 Jahre",
    "Weißer Mann 55–64 Jahre",
    "Bachelor-Abschluss 2",
    "Bachelorabschluss oder höher 25 bis 64 Jahre",
    "Kinder",
    "Kinder in Haushalten mit allein stehender Mutter",
    "Pendler mit Bus",
    "Pendler mit Auto, LKW oder Van",
    "Pendler mit Fahrgemeinschaft",
    "Pendler mit U-Bahn oder Hochbahn",
    "Allein pendelnde Autofahrer",
    "Anderes Haus im Vorjahr in einer anderen Stadt",
    "Anderes Haus im Vorjahr in derselben Stadt",
    "Beschäftigte in Landwirtschaft, Forstwirtschaft, Fischerei, Jagd, Bergbau",
    "Beschäftigte in Kunst, Unterhaltung, Erholung, Beherbergung und Verpflegung",
    "Beschäftigte im Bauwesen",
    "Beschäftigte im Bildungswesen, Gesundheitswesen und Soziales",
    "Beschäftigte im Finanzwesen, Versicherung, Immobilien",
    "Beschäftigte im Informationswesen",
    "Beschäftigte im verarbeitenden Gewerbe",
    "Beschäftigte in sonstigen Dienstleistungen außer öffentlicher Verwaltung",
    "Beschäftigte in der öffentlichen Verwaltung",
    "Beschäftigte im Einzelhandel",
    "Beschäftigte in Wissenschaft, Management, Verwaltung, Abfallwirtschaft",
    "Beschäftigte im Transport, Lagerhaltung und Versorgungsbetrieben",
    "Beschäftigte im Großhandel",
    "Weiblich geführte Haushalte",
    "Vier oder mehr Autos",
    "Gini-Index",
    "Berufsqualifizierender Abschluss",
    "Gruppenunterkünfte",
    "High-School-Abschluss einschließlich GED",
    "Haushalte mit öffentlicher Unterstützung oder Lebensmittelmarken",
    "Schüler in Klassen 1 bis 4",
    "Schüler in Klassen 5 bis 8",
    "Schüler in Klassen 9 bis 12",
    "In der Schule",
    "Im Grundstudium",
    "Weniger als High-School-Abschluss",
    "Männer 45–64 mit Associate Degree",
    "Männer 45–64 mit Bachelorabschluss",
    "Männer 45–64 mit Hochschulabschluss",
    "Männer 45–64 mit weniger als 9 Schuljahren",
    "Männer 45–64 mit Abschluss 9–12 Jahre",
    "Männer 45–64 mit High-School-Abschluss",
    "Männer 45–64 mit einigen College-Kursen",
    "Männer 45–64 Jahre",
    "Haushalte mit männlicher Haushaltsführung",
    "Beschäftigte in Management und Kunst",
    "Kein Auto",
    "Keine Autos",
    "Bevölkerung ohne US-Staatsbürgerschaft",
    "Beschäftigte in Management und Kunst",
    "Beschäftigte in natürlichen Ressourcen, Bauwesen und Instandhaltung",
    "Beschäftigte in Produktion, Transport und Materialwirtschaft",
    "Beschäftigte im Verkauf und Büro",
    "Beschäftigte im Dienstleistungssektor",
    "Ein Auto",
    "Zwei Autos",
    "Drei Autos",
    "Bevölkerung 25 bis 64 Jahre",
    "Armutsstatus der Bevölkerung bestimmt",
    "Bevölkerung ab 1 Jahr",
    "Bevölkerung über 3 Jahre",
    "Armutsrisiko",
    "Beschäftigte im Verkauf und Büro",
    "Einige College-Kurse und Associate-Abschluss",
    "Zu Fuß zur Arbeit gegangen",
    "Arbeitete von zu Hause",
    "Erwerbstätige ab 16 Jahren",
    "Associate-Abschluss",
    "Bachelor-Abschluss",
    "High-School-Abschluss",
    "Weniger als ein Jahr College",
    "Master-Abschluss",
    "Ein weiteres Jahr College",
    "Bevölkerung über 25 Jahre",
    "Pendelzeit 35 bis 44 Minuten",
    "Pendelzeit 60 Minuten oder mehr",
    "Pendelzeit unter 10 Minuten",
    "Pendler ab 16 Jahren",
    "Hispanische Bevölkerung jeder Abstammung",
    "Bevölkerung über 5 Jahre",
    "Spricht zu Hause nur Englisch",
    "Spricht zu Hause Spanisch",
    "Zu Hause Spanisch, wenig Englisch",
    "Bevölkerung ab 15 Jahren und älter",
    "Nie verheiratet",
    "Derzeit verheiratet",
    "Getrennt",
    "Verwitwet",
    "Geschieden",
    "Datum"
  ],
  "column_types": [
    "STRING",
    "STRING",
    "STRING",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "STRING"
  ],
  "nested_column_names": [
    "Could you clarify how you want code-like headers (for example geoidsl, geoidsc, and other snake_case identifiers) to be handled in the German translations? Specifically:",
    "- Should these be translated into natural German phrases with underscores, or",
    "- Should they be kept as-is (not translated) to preserve the exact identifiers?",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ],
  "nested_column_types": [
    "STRING",
    "STRING",
    "STRING",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "FLOAT64",
    "STRING"
  ],
  "description": [
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ],
  "sample_rows": [
    {
      "Could you clarify how you want code-like headers (for example geoidsl, geoidsc, and other snake_case identifiers) to be handled in the German translations? Specifically:": "34007",
      "- Should these be translated into natural German phrases with underscores, or": "34007",
      "- Should they be kept as-is (not translated) to preserve the exact identifiers?": "34007",
      "": "2010"
    },
    {
      "Could you clarify how you want code-like headers (for example geoidsl, geoidsc, and other snake_case identifiers) to be handled in the German translations? Specifically:": "53053",
      "- Should these be translated into natural German phrases with underscores, or": "53053",
      "- Should they be kept as-is (not translated) to preserve the exact identifiers?": "53053",
      "": "2010"
    },
    {
      "Could you clarify how you want code-like headers (for example geoidsl, geoidsc, and other snake_case identifiers) to be handled in the German translations? Specifically:": "13089",
      "- Should these be translated into natural German phrases with underscores, or": "13089",
      "- Should they be kept as-is (not translated) to preserve the exact identifiers?": "13089",
      "": "2010"
    },
    {
      "Could you clarify how you want code-like headers (for example geoidsl, geoidsc, and other snake_case identifiers) to be handled in the German translations? Specifically:": "24510",
      "- Should these be translated into natural German phrases with underscores, or": "24510",
      "- Should they be kept as-is (not translated) to preserve the exact identifiers?": "24510",
      "": "2010"
    },
    {
      "Could you clarify how you want code-like headers (for example geoidsl, geoidsc, and other snake_case identifiers) to be handled in the German translations? Specifically:": "11001",
      "- Should these be translated into natural German phrases with underscores, or": "11001",
      "- Should they be kept as-is (not translated) to preserve the exact identifiers?": "11001",
      "": "2010"
    }
  ]
}