{
  "table_name": "POSTS_ANSWERS",
  "table_fullname": "STACKOVERFLOW.STACKOVERFLOW.POSTS_ANSWERS",
  "column_names": [
    "compteur_de_vues",
    "étiquettes",
    "id_utilisateur_propriétaire",
    "score",
    "nom_d_affichage_du_propriétaire",
    "compteur_de_réponses",
    "nom_d_affichage_du_dernier_éditeur",
    "date_de_dernière_activité",
    "id_utilisateur_du_dernier_éditeur",
    "compteur_de_favoris",
    "id_de_type_de_poste",
    "date_de_propriété_communautaire",
    "id_de_réponse_acceptée",
    "compteur_de_commentaires",
    "corps",
    "id_parent",
    "id",
    "titre",
    "date_de_création",
    "date_de_dernière_édition"
  ],
  "column_types": [
    "TEXT",
    "TEXT",
    "NUMBER",
    "NUMBER",
    "TEXT",
    "TEXT",
    "TEXT",
    "NUMBER",
    "NUMBER",
    "TEXT",
    "NUMBER",
    "NUMBER",
    "TEXT",
    "NUMBER",
    "TEXT",
    "NUMBER",
    "NUMBER",
    "TEXT",
    "NUMBER",
    "NUMBER"
  ],
  "description": [
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ],
  "sample_rows": [
    {
      "id": 5686118,
      "titre": null,
      "corps": "<p>first do</p>\n\n<pre><code>// only for the GUY who didn't read the complete answer :(\n$param=addslashes($param); \n</code></pre>\n\n<p>then write code in simple HTML    </p>\n\n<pre><code>&lt;input type='button' onclick=\"myFunc(&lt;?php echo $param?&gt;);\" /&gt;\n</code></pre>\n\n<p><strong>Note:</strong> <code>mysql_real_escape_string</code> works when we handle with mysqltry with <code>addslashes</code></p>",
      "id_de_réponse_acceptée": null,
      "compteur_de_réponses": null,
      "compteur_de_commentaires": 14,
      "date_de_propriété_communautaire": null,
      "date_de_création": 1302952732137000,
      "compteur_de_favoris": null,
      "date_de_dernière_activité": 1302954623957000,
      "date_de_dernière_édition": 1302954623957000.0,
      "nom_d_affichage_du_dernier_éditeur": null,
      "id_utilisateur_du_dernier_éditeur": 155861.0,
      "nom_d_affichage_du_propriétaire": null,
      "id_utilisateur_propriétaire": 155861,
      "id_parent": 5686086,
      "id_de_type_de_poste": 2,
      "score": 1,
      "étiquettes": null,
      "compteur_de_vues": null
    },
    {
      "id": 5727069,
      "titre": null,
      "corps": "<p>I agree with Noel</p>\n\n<p>There are many ways to achieve what you are trying. One way to do this is using <code>System.Reflection</code></p>\n\n<p>like this in formA </p>\n\n<pre><code> Assembly a = Assembly.LoadFrom(\"WindowsApplication1.exe\");\n        Form frm = a.CreateInstance(\"WindowsApplication1.FormB\") as Form;\n        frm.MdiParent = this;\n        frm.Show();\n</code></pre>",
      "id_de_réponse_acceptée": null,
      "compteur_de_réponses": null,
      "compteur_de_commentaires": 14,
      "date_de_propriété_communautaire": null,
      "date_de_création": 1303285246993000,
      "compteur_de_favoris": null,
      "date_de_dernière_activité": 1303285246993000,
      "date_de_dernière_édition": null,
      "nom_d_affichage_du_dernier_éditeur": null,
      "id_utilisateur_du_dernier_éditeur": null,
      "nom_d_affichage_du_propriétaire": null,
      "id_utilisateur_propriétaire": 697968,
      "id_parent": 5726895,
      "id_de_type_de_poste": 2,
      "score": 1,
      "étiquettes": null,
      "compteur_de_vues": null
    },
    {
      "id": 5738452,
      "titre": null,
      "corps": "<h2>Example</h2>\n\n<pre><code>$dt = time();   // today... or use $dt = strtotime('2010-04-20'); to set custom start date.\n$past_days = 7; // number of past days\n$filesindir = dirTxt('your_dir');\n\nfor ($i=0; $i&lt;=$past_days; $i++) {\n  $filename = 'abcd_' . date('Y_m_d', $dt) . '.txt';\n  $files[] = $filename;\n  $dt = strtotime('-1 day', $dt);\n  } \n\n$files = array_intersect($filesindir, $files);\n\nprint_r($files);\n</code></pre>\n\n<h2>Output (might be like this, depends of $filesindir array)</h2>\n\n<pre><code>Array\n(\n    [0] =&gt; abcd_2011_04_21.txt\n    [1] =&gt; abcd_2011_04_20.txt\n    [2] =&gt; abcd_2011_04_18.txt\n    [3] =&gt; abcd_2011_04_15.txt\n)\n</code></pre>",
      "id_de_réponse_acceptée": null,
      "compteur_de_réponses": null,
      "compteur_de_commentaires": 14,
      "date_de_propriété_communautaire": null,
      "date_de_création": 1303348543150000,
      "compteur_de_favoris": null,
      "date_de_dernière_activité": 1303352091643000,
      "date_de_dernière_édition": 1303352091643000.0,
      "nom_d_affichage_du_dernier_éditeur": null,
      "id_utilisateur_du_dernier_éditeur": 679733.0,
      "nom_d_affichage_du_propriétaire": null,
      "id_utilisateur_propriétaire": 679733,
      "id_parent": 5738395,
      "id_de_type_de_poste": 2,
      "score": 1,
      "étiquettes": null,
      "compteur_de_vues": null
    },
    {
      "id": 5827093,
      "titre": null,
      "corps": "<p>Signal handlers mostly work in Python. But there are some problems. One is that your handler won't run until the interpreter re-enters it's bytecode interpreter. if your program is blocked in a C function the signal handler is not called until it returns. You don't show the code where you are waiting. Are you using signal.pause()?</p>\n\n<p>Another is that if you are in a system call you will get an exception after the singal handler returns. You need to wrap all system calls with a retry handler (at least on Linux). </p>\n\n<p>It's interesting that you are writing an init replacement... That's something like a process manager. The <a href=\"http://code.google.com/p/pycopia/source/browse/trunk/process/pycopia/proctools.py\" rel=\"nofollow\">proctools</a> code might interest you, since it does handle SIGCHLD. </p>\n\n<p>By the way, this code:</p>\n\n<pre><code>import signal\n\ndef SigTest(SIG, FRM):\n    print \"SIGINT Caught\"\n\nsignal.signal(signal.SIGHUP, SigTest)\n\nwhile True:\n    signal.pause()\n</code></pre>\n\n<p>Does work on my system.</p>",
      "id_de_réponse_acceptée": null,
      "compteur_de_réponses": null,
      "compteur_de_commentaires": 14,
      "date_de_propriété_communautaire": null,
      "date_de_création": 1304042291093000,
      "compteur_de_favoris": null,
      "date_de_dernière_activité": 1304044855097000,
      "date_de_dernière_édition": 1304044855097000.0,
      "nom_d_affichage_du_dernier_éditeur": null,
      "id_utilisateur_du_dernier_éditeur": 521034.0,
      "nom_d_affichage_du_propriétaire": null,
      "id_utilisateur_propriétaire": 521034,
      "id_parent": 5826824,
      "id_de_type_de_poste": 2,
      "score": 1,
      "étiquettes": null,
      "compteur_de_vues": null
    },
    {
      "id": 5830898,
      "titre": null,
      "corps": "<p>Have you considered using <code>lexical_cast</code> from boost?</p>\n\n<p><a href=\"http://www.boost.org/doc/libs/1_46_1/libs/conversion/lexical_cast.htm\" rel=\"nofollow\">http://www.boost.org/doc/libs/1_46_1/libs/conversion/lexical_cast.htm</a></p>\n\n<p>Edit: btw, the <code>clear()</code> should be redundant.</p>",
      "id_de_réponse_acceptée": null,
      "compteur_de_réponses": null,
      "compteur_de_commentaires": 14,
      "date_de_propriété_communautaire": null,
      "date_de_création": 1304072956473000,
      "compteur_de_favoris": null,
      "date_de_dernière_activité": 1304072956473000,
      "date_de_dernière_édition": null,
      "nom_d_affichage_du_dernier_éditeur": null,
      "id_utilisateur_du_dernier_éditeur": null,
      "nom_d_affichage_du_propriétaire": null,
      "id_utilisateur_propriétaire": 211659,
      "id_parent": 5830868,
      "id_de_type_de_poste": 2,
      "score": 1,
      "étiquettes": null,
      "compteur_de_vues": null
    }
  ]
}