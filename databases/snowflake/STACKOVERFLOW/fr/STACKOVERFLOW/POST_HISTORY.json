{
  "table_name": "POST_HISTORY",
  "table_fullname": "STACKOVERFLOW.STACKOVERFLOW.POST_HISTORY",
  "column_names": [
    "date_de_creation",
    "id_de_type_d_historique_de_publication",
    "id_utilisateur",
    "commentaire",
    "id_de_publication",
    "guid_de_revision",
    "texte",
    "id"
  ],
  "column_types": [
    "NUMBER",
    "NUMBER",
    "NUMBER",
    "TEXT",
    "NUMBER",
    "TEXT",
    "TEXT",
    "NUMBER"
  ],
  "description": [
    null,
    null,
    null,
    null,
    null,
    null,
    null,
    null
  ],
  "sample_rows": [
    {
      "id": 54201121,
      "date_de_creation": 1387754944993000,
      "id_de_publication": 20735186,
      "id_de_type_d_historique_de_publication": 2,
      "guid_de_revision": "8b6aaedc-d207-4081-97a9-7035207f386d",
      "id_utilisateur": 3128057,
      "texte": "I am converting tutorials for students (2nd language speakers, 9 to 12 yrs old) to access in an offline / intranet context.  Hence the websites I would like them to use are unavailable.\n\nI am trying to mimic the 'alter the code' style of tutorials for helping with JavaScript / HTML5 Canvas.\n\nThis works :\n\n    <canvas id=\"myCanvas\" height=\"400px\" width=\"400px\"></canvas>\n    <script>\n    function update(){\n       eval(document.getElementById('demoScript').value);\n    }\n    \n    var ctx = document.getElementById(\"myCanvas\").getContext(\"2d\");\n    \n    </script>\n    <textarea id=\"demoScript\">\n    ctx.fillRect(100,100,50,50);\n    </textarea>\n    <input type=\"button\" value=\"update\" onClick=\"update()\">\n\n... but everything I have read says eval() is a bad idea.\n\nI can get the textarea content to pop-up in a div if I want, but I can't get it to pop-up in a script anywhere ... leaving me with just eval().\n\nOptions and recommendations for alternatives please ... or this is as good as it gets ?",
      "commentaire": null
    },
    {
      "id": 54201122,
      "date_de_creation": 1387754944993000,
      "id_de_publication": 20735186,
      "id_de_type_d_historique_de_publication": 1,
      "guid_de_revision": "8b6aaedc-d207-4081-97a9-7035207f386d",
      "id_utilisateur": 3128057,
      "texte": "alternative to eval() in DOM manipulation",
      "commentaire": null
    },
    {
      "id": 53944729,
      "date_de_creation": 1387400631630000,
      "id_de_publication": 20668336,
      "id_de_type_d_historique_de_publication": 3,
      "guid_de_revision": "f61e987f-c4bd-424d-9b1f-b54d4c3a34b5",
      "id_utilisateur": 506873,
      "texte": "<javascript><jquery>",
      "commentaire": null
    },
    {
      "id": 54309014,
      "date_de_creation": 1387904289427000,
      "id_de_publication": 20764316,
      "id_de_type_d_historique_de_publication": 1,
      "guid_de_revision": "7f13aafd-4c01-4b0f-9774-b7785dcc257c",
      "id_utilisateur": 506873,
      "texte": "PHP $_FILES superglobal only containing name",
      "commentaire": null
    },
    {
      "id": 54494550,
      "date_de_creation": 1388227526490000,
      "id_de_publication": 20812985,
      "id_de_type_d_historique_de_publication": 5,
      "guid_de_revision": "68ca3962-da5a-4592-8766-307c297f5d84",
      "id_utilisateur": 1031417,
      "texte": "Let's assume I have `N` git projects, which combined together define a release/ repository `R`.\n\nWhen `R` pass a sanity test, `T` we name it a good `R` and if it fails we name it a bad `R`.\n\nI want to write a script, and in the future push it to [google repo][1], which generalizes the `git bisect` mechanism for a repository `R` defined by `N` git projects.\n\nThe aim is to find the latest good `R` named best `R`.\n\n\n\n\n  [1]: https://code.google.com/p/git-repo/",
      "commentaire": "added 2 characters in body"
    }
  ]
}